/* Generated by the Nim Compiler v0.19.9 */
/*   (c) 2018 Andreas Rumpf */

var framePtr = null;
var excHandler = 0;
var lastJSError = null;
if (typeof Int8Array === 'undefined') Int8Array = Array;
if (typeof Int16Array === 'undefined') Int16Array = Array;
if (typeof Int32Array === 'undefined') Int32Array = Array;
if (typeof Uint8Array === 'undefined') Uint8Array = Array;
if (typeof Uint16Array === 'undefined') Uint16Array = Array;
if (typeof Uint32Array === 'undefined') Uint32Array = Array;
if (typeof Float32Array === 'undefined') Float32Array = Array;
if (typeof Float64Array === 'undefined') Float64Array = Array;
var NTI183048 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI185769 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62395 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62391 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62387 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62383 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62379 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62375 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62371 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62367 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62363 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62359 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62355 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62351 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62347 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62343 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62339 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62335 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62331 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62327 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62323 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62319 = {size: 0,kind: 25,base: null,node: null,finalizer: null};
var NTI62204 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62262 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62260 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62218 = {size: 0, kind: 14, base: null, node: null, finalizer: null};
var NTI62452 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62450 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62220 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62448 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62222 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62248 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62246 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62499 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62542 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI62254 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62252 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36032 = {size: 0,kind: 1,base: null,node: null,finalizer: null};
var NTI62216 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62214 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI62230 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI62228 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI64057 = {size: 0,kind: 24,base: null,node: null,finalizer: null};
var NTI40250 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40258 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI36006 = {size: 0,kind: 31,base: null,node: null,finalizer: null};
var NTI52344 = {size: 0, kind: 18, base: null, node: null, finalizer: null};
var NTI40208 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40318 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI36016 = {size: 0,kind: 40,base: null,node: null,finalizer: null};
var NTI36040 = {size: 0,kind: 28,base: null,node: null,finalizer: null};
var NTI36042 = {size: 0,kind: 29,base: null,node: null,finalizer: null};
var NTI40312 = {size: 0,kind: 22,base: null,node: null,finalizer: null};
var NTI40226 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40228 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40242 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NTI40246 = {size: 0, kind: 17, base: null, node: null, finalizer: null};
var NNI40246 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40246.node = NNI40246;
var NNI40242 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40242.node = NNI40242;
var NNI40228 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40228.node = NNI40228;
NTI40312.base = NTI40226;
NTI40318.base = NTI40226;
var NNI40226 = {kind: 2, len: 6, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "parent", len: 0, typ: NTI40312, name: "parent", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "message", len: 0, typ: NTI36040, name: "msg", sons: null}, 
{kind: 1, offset: "trace", len: 0, typ: NTI36040, name: "trace", sons: null}, 
{kind: 1, offset: "raiseId", len: 0, typ: NTI36016, name: "raiseId", sons: null}, 
{kind: 1, offset: "up", len: 0, typ: NTI40318, name: "up", sons: null}]};
NTI40226.node = NNI40226;
var NNI40208 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40208.node = NNI40208;
NTI40226.base = NTI40208;
NTI40228.base = NTI40226;
NTI40242.base = NTI40228;
NTI40246.base = NTI40242;
var NNI52344 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36042, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36006, name: "Field1", sons: null}]};
NTI52344.node = NNI52344;
var NNI40258 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40258.node = NNI40258;
NTI40258.base = NTI40228;
var NNI40250 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40250.node = NNI40250;
NTI40250.base = NTI40228;
var NNI62216 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI62216.node = NNI62216;
NTI62216.base = NTI40208;
NTI62214.base = NTI62216;
NTI62542.base = NTI62228;
var NNI62254 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "action", len: 0, typ: NTI36042, name: "action", sons: null}, 
{kind: 1, offset: "encoding", len: 0, typ: NTI36042, name: "encoding", sons: null}, 
{kind: 1, offset: "method", len: 0, typ: NTI36042, name: "method", sons: null}, 
{kind: 1, offset: "target", len: 0, typ: NTI36042, name: "target", sons: null}, 
{kind: 1, offset: "elements", len: 0, typ: NTI62542, name: "elements", sons: null}]};
NTI62254.node = NNI62254;
NTI62254.base = NTI62230;
NTI62252.base = NTI62254;
var NNI62248 = {kind: 2, len: 5, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "defaultSelected", len: 0, typ: NTI36032, name: "defaultSelected", sons: null}, 
{kind: 1, offset: "selected", len: 0, typ: NTI36032, name: "selected", sons: null}, 
{kind: 1, offset: "selectedIndex", len: 0, typ: NTI36006, name: "selectedIndex", sons: null}, 
{kind: 1, offset: "text", len: 0, typ: NTI36042, name: "text", sons: null}, 
{kind: 1, offset: "value", len: 0, typ: NTI36042, name: "value", sons: null}]};
NTI62248.node = NNI62248;
NTI62248.base = NTI62230;
NTI62246.base = NTI62248;
NTI62499.base = NTI62246;
var NNI62230 = {kind: 2, len: 11, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "classList", len: 0, typ: NTI62214, name: "classList", sons: null}, 
{kind: 1, offset: "checked", len: 0, typ: NTI36032, name: "checked", sons: null}, 
{kind: 1, offset: "defaultChecked", len: 0, typ: NTI36032, name: "defaultChecked", sons: null}, 
{kind: 1, offset: "defaultValue", len: 0, typ: NTI36042, name: "defaultValue", sons: null}, 
{kind: 1, offset: "disabled", len: 0, typ: NTI36032, name: "disabled", sons: null}, 
{kind: 1, offset: "form", len: 0, typ: NTI62252, name: "form", sons: null}, 
{kind: 1, offset: "name", len: 0, typ: NTI36042, name: "name", sons: null}, 
{kind: 1, offset: "readOnly", len: 0, typ: NTI36032, name: "readOnly", sons: null}, 
{kind: 1, offset: "options", len: 0, typ: NTI62499, name: "options", sons: null}, 
{kind: 1, offset: "clientWidth", len: 0, typ: NTI36006, name: "clientWidth", sons: null}, 
{kind: 1, offset: "clientHeight", len: 0, typ: NTI36006, name: "clientHeight", sons: null}]};
NTI62230.node = NNI62230;
NTI62220.base = NTI62222;
NTI62448.base = NTI62220;
NTI62450.base = NTI62220;
NTI62452.base = NTI62220;
var NNI62218 = {kind: 2, offset: 0, typ: null, name: null, len: 12, sons: {"1": {kind: 1, offset: 1, typ: NTI62218, name: "ElementNode", len: 0, sons: null}, 
"2": {kind: 1, offset: 2, typ: NTI62218, name: "AttributeNode", len: 0, sons: null}, 
"3": {kind: 1, offset: 3, typ: NTI62218, name: "TextNode", len: 0, sons: null}, 
"4": {kind: 1, offset: 4, typ: NTI62218, name: "CDATANode", len: 0, sons: null}, 
"5": {kind: 1, offset: 5, typ: NTI62218, name: "EntityRefNode", len: 0, sons: null}, 
"6": {kind: 1, offset: 6, typ: NTI62218, name: "EntityNode", len: 0, sons: null}, 
"7": {kind: 1, offset: 7, typ: NTI62218, name: "ProcessingInstructionNode", len: 0, sons: null}, 
"8": {kind: 1, offset: 8, typ: NTI62218, name: "CommentNode", len: 0, sons: null}, 
"9": {kind: 1, offset: 9, typ: NTI62218, name: "DocumentNode", len: 0, sons: null}, 
"10": {kind: 1, offset: 10, typ: NTI62218, name: "DocumentTypeNode", len: 0, sons: null}, 
"11": {kind: 1, offset: 11, typ: NTI62218, name: "DocumentFragmentNode", len: 0, sons: null}, 
"12": {kind: 1, offset: 12, typ: NTI62218, name: "NotationNode", len: 0, sons: null}}};
NTI62218.node = NNI62218;
var NNI62262 = {kind: 2, len: 91, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "background", len: 0, typ: NTI36042, name: "background", sons: null}, 
{kind: 1, offset: "backgroundAttachment", len: 0, typ: NTI36042, name: "backgroundAttachment", sons: null}, 
{kind: 1, offset: "backgroundColor", len: 0, typ: NTI36042, name: "backgroundColor", sons: null}, 
{kind: 1, offset: "backgroundImage", len: 0, typ: NTI36042, name: "backgroundImage", sons: null}, 
{kind: 1, offset: "backgroundPosition", len: 0, typ: NTI36042, name: "backgroundPosition", sons: null}, 
{kind: 1, offset: "backgroundRepeat", len: 0, typ: NTI36042, name: "backgroundRepeat", sons: null}, 
{kind: 1, offset: "border", len: 0, typ: NTI36042, name: "border", sons: null}, 
{kind: 1, offset: "borderBottom", len: 0, typ: NTI36042, name: "borderBottom", sons: null}, 
{kind: 1, offset: "borderBottomColor", len: 0, typ: NTI36042, name: "borderBottomColor", sons: null}, 
{kind: 1, offset: "borderBottomStyle", len: 0, typ: NTI36042, name: "borderBottomStyle", sons: null}, 
{kind: 1, offset: "borderBottomWidth", len: 0, typ: NTI36042, name: "borderBottomWidth", sons: null}, 
{kind: 1, offset: "borderColor", len: 0, typ: NTI36042, name: "borderColor", sons: null}, 
{kind: 1, offset: "borderLeft", len: 0, typ: NTI36042, name: "borderLeft", sons: null}, 
{kind: 1, offset: "borderLeftColor", len: 0, typ: NTI36042, name: "borderLeftColor", sons: null}, 
{kind: 1, offset: "borderLeftStyle", len: 0, typ: NTI36042, name: "borderLeftStyle", sons: null}, 
{kind: 1, offset: "borderLeftWidth", len: 0, typ: NTI36042, name: "borderLeftWidth", sons: null}, 
{kind: 1, offset: "borderRight", len: 0, typ: NTI36042, name: "borderRight", sons: null}, 
{kind: 1, offset: "borderRightColor", len: 0, typ: NTI36042, name: "borderRightColor", sons: null}, 
{kind: 1, offset: "borderRightStyle", len: 0, typ: NTI36042, name: "borderRightStyle", sons: null}, 
{kind: 1, offset: "borderRightWidth", len: 0, typ: NTI36042, name: "borderRightWidth", sons: null}, 
{kind: 1, offset: "borderStyle", len: 0, typ: NTI36042, name: "borderStyle", sons: null}, 
{kind: 1, offset: "borderTop", len: 0, typ: NTI36042, name: "borderTop", sons: null}, 
{kind: 1, offset: "borderTopColor", len: 0, typ: NTI36042, name: "borderTopColor", sons: null}, 
{kind: 1, offset: "borderTopStyle", len: 0, typ: NTI36042, name: "borderTopStyle", sons: null}, 
{kind: 1, offset: "borderTopWidth", len: 0, typ: NTI36042, name: "borderTopWidth", sons: null}, 
{kind: 1, offset: "borderWidth", len: 0, typ: NTI36042, name: "borderWidth", sons: null}, 
{kind: 1, offset: "bottom", len: 0, typ: NTI36042, name: "bottom", sons: null}, 
{kind: 1, offset: "captionSide", len: 0, typ: NTI36042, name: "captionSide", sons: null}, 
{kind: 1, offset: "clear", len: 0, typ: NTI36042, name: "clear", sons: null}, 
{kind: 1, offset: "clip", len: 0, typ: NTI36042, name: "clip", sons: null}, 
{kind: 1, offset: "color", len: 0, typ: NTI36042, name: "color", sons: null}, 
{kind: 1, offset: "cursor", len: 0, typ: NTI36042, name: "cursor", sons: null}, 
{kind: 1, offset: "direction", len: 0, typ: NTI36042, name: "direction", sons: null}, 
{kind: 1, offset: "display", len: 0, typ: NTI36042, name: "display", sons: null}, 
{kind: 1, offset: "emptyCells", len: 0, typ: NTI36042, name: "emptyCells", sons: null}, 
{kind: 1, offset: "cssFloat", len: 0, typ: NTI36042, name: "cssFloat", sons: null}, 
{kind: 1, offset: "font", len: 0, typ: NTI36042, name: "font", sons: null}, 
{kind: 1, offset: "fontFamily", len: 0, typ: NTI36042, name: "fontFamily", sons: null}, 
{kind: 1, offset: "fontSize", len: 0, typ: NTI36042, name: "fontSize", sons: null}, 
{kind: 1, offset: "fontStretch", len: 0, typ: NTI36042, name: "fontStretch", sons: null}, 
{kind: 1, offset: "fontStyle", len: 0, typ: NTI36042, name: "fontStyle", sons: null}, 
{kind: 1, offset: "fontVariant", len: 0, typ: NTI36042, name: "fontVariant", sons: null}, 
{kind: 1, offset: "fontWeight", len: 0, typ: NTI36042, name: "fontWeight", sons: null}, 
{kind: 1, offset: "height", len: 0, typ: NTI36042, name: "height", sons: null}, 
{kind: 1, offset: "left", len: 0, typ: NTI36042, name: "left", sons: null}, 
{kind: 1, offset: "letterSpacing", len: 0, typ: NTI36042, name: "letterSpacing", sons: null}, 
{kind: 1, offset: "lineHeight", len: 0, typ: NTI36042, name: "lineHeight", sons: null}, 
{kind: 1, offset: "listStyle", len: 0, typ: NTI36042, name: "listStyle", sons: null}, 
{kind: 1, offset: "listStyleImage", len: 0, typ: NTI36042, name: "listStyleImage", sons: null}, 
{kind: 1, offset: "listStylePosition", len: 0, typ: NTI36042, name: "listStylePosition", sons: null}, 
{kind: 1, offset: "listStyleType", len: 0, typ: NTI36042, name: "listStyleType", sons: null}, 
{kind: 1, offset: "margin", len: 0, typ: NTI36042, name: "margin", sons: null}, 
{kind: 1, offset: "marginBottom", len: 0, typ: NTI36042, name: "marginBottom", sons: null}, 
{kind: 1, offset: "marginLeft", len: 0, typ: NTI36042, name: "marginLeft", sons: null}, 
{kind: 1, offset: "marginRight", len: 0, typ: NTI36042, name: "marginRight", sons: null}, 
{kind: 1, offset: "marginTop", len: 0, typ: NTI36042, name: "marginTop", sons: null}, 
{kind: 1, offset: "maxHeight", len: 0, typ: NTI36042, name: "maxHeight", sons: null}, 
{kind: 1, offset: "maxWidth", len: 0, typ: NTI36042, name: "maxWidth", sons: null}, 
{kind: 1, offset: "minHeight", len: 0, typ: NTI36042, name: "minHeight", sons: null}, 
{kind: 1, offset: "minWidth", len: 0, typ: NTI36042, name: "minWidth", sons: null}, 
{kind: 1, offset: "overflow", len: 0, typ: NTI36042, name: "overflow", sons: null}, 
{kind: 1, offset: "overflowX", len: 0, typ: NTI36042, name: "overflowX", sons: null}, 
{kind: 1, offset: "overflowY", len: 0, typ: NTI36042, name: "overflowY", sons: null}, 
{kind: 1, offset: "padding", len: 0, typ: NTI36042, name: "padding", sons: null}, 
{kind: 1, offset: "paddingBottom", len: 0, typ: NTI36042, name: "paddingBottom", sons: null}, 
{kind: 1, offset: "paddingLeft", len: 0, typ: NTI36042, name: "paddingLeft", sons: null}, 
{kind: 1, offset: "paddingRight", len: 0, typ: NTI36042, name: "paddingRight", sons: null}, 
{kind: 1, offset: "paddingTop", len: 0, typ: NTI36042, name: "paddingTop", sons: null}, 
{kind: 1, offset: "pageBreakAfter", len: 0, typ: NTI36042, name: "pageBreakAfter", sons: null}, 
{kind: 1, offset: "pageBreakBefore", len: 0, typ: NTI36042, name: "pageBreakBefore", sons: null}, 
{kind: 1, offset: "position", len: 0, typ: NTI36042, name: "position", sons: null}, 
{kind: 1, offset: "right", len: 0, typ: NTI36042, name: "right", sons: null}, 
{kind: 1, offset: "scrollbar3dLightColor", len: 0, typ: NTI36042, name: "scrollbar3dLightColor", sons: null}, 
{kind: 1, offset: "scrollbarArrowColor", len: 0, typ: NTI36042, name: "scrollbarArrowColor", sons: null}, 
{kind: 1, offset: "scrollbarBaseColor", len: 0, typ: NTI36042, name: "scrollbarBaseColor", sons: null}, 
{kind: 1, offset: "scrollbarDarkshadowColor", len: 0, typ: NTI36042, name: "scrollbarDarkshadowColor", sons: null}, 
{kind: 1, offset: "scrollbarFaceColor", len: 0, typ: NTI36042, name: "scrollbarFaceColor", sons: null}, 
{kind: 1, offset: "scrollbarHighlightColor", len: 0, typ: NTI36042, name: "scrollbarHighlightColor", sons: null}, 
{kind: 1, offset: "scrollbarShadowColor", len: 0, typ: NTI36042, name: "scrollbarShadowColor", sons: null}, 
{kind: 1, offset: "scrollbarTrackColor", len: 0, typ: NTI36042, name: "scrollbarTrackColor", sons: null}, 
{kind: 1, offset: "tableLayout", len: 0, typ: NTI36042, name: "tableLayout", sons: null}, 
{kind: 1, offset: "textAlign", len: 0, typ: NTI36042, name: "textAlign", sons: null}, 
{kind: 1, offset: "textDecoration", len: 0, typ: NTI36042, name: "textDecoration", sons: null}, 
{kind: 1, offset: "textIndent", len: 0, typ: NTI36042, name: "textIndent", sons: null}, 
{kind: 1, offset: "textTransform", len: 0, typ: NTI36042, name: "textTransform", sons: null}, 
{kind: 1, offset: "top", len: 0, typ: NTI36042, name: "top", sons: null}, 
{kind: 1, offset: "verticalAlign", len: 0, typ: NTI36042, name: "verticalAlign", sons: null}, 
{kind: 1, offset: "visibility", len: 0, typ: NTI36042, name: "visibility", sons: null}, 
{kind: 1, offset: "width", len: 0, typ: NTI36042, name: "width", sons: null}, 
{kind: 1, offset: "wordSpacing", len: 0, typ: NTI36042, name: "wordSpacing", sons: null}, 
{kind: 1, offset: "zIndex", len: 0, typ: NTI36006, name: "zIndex", sons: null}]};
NTI62262.node = NNI62262;
NTI62262.base = NTI40208;
NTI62260.base = NTI62262;
var NNI62222 = {kind: 2, len: 14, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "attributes", len: 0, typ: NTI62448, name: "attributes", sons: null}, 
{kind: 1, offset: "childNodes", len: 0, typ: NTI62450, name: "childNodes", sons: null}, 
{kind: 1, offset: "children", len: 0, typ: NTI62452, name: "children", sons: null}, 
{kind: 1, offset: "data", len: 0, typ: NTI36042, name: "data", sons: null}, 
{kind: 1, offset: "firstChild", len: 0, typ: NTI62220, name: "firstChild", sons: null}, 
{kind: 1, offset: "lastChild", len: 0, typ: NTI62220, name: "lastChild", sons: null}, 
{kind: 1, offset: "nextSibling", len: 0, typ: NTI62220, name: "nextSibling", sons: null}, 
{kind: 1, offset: "nodeName", len: 0, typ: NTI36042, name: "nodeName", sons: null}, 
{kind: 1, offset: "nodeType", len: 0, typ: NTI62218, name: "nodeType", sons: null}, 
{kind: 1, offset: "nodeValue", len: 0, typ: NTI36042, name: "nodeValue", sons: null}, 
{kind: 1, offset: "parentNode", len: 0, typ: NTI62220, name: "parentNode", sons: null}, 
{kind: 1, offset: "previousSibling", len: 0, typ: NTI62220, name: "previousSibling", sons: null}, 
{kind: 1, offset: "innerHTML", len: 0, typ: NTI36042, name: "innerHTML", sons: null}, 
{kind: 1, offset: "style", len: 0, typ: NTI62260, name: "style", sons: null}]};
NTI62222.node = NNI62222;
var NNI62204 = {kind: 2, len: 20, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "onabort", len: 0, typ: NTI62319, name: "onabort", sons: null}, 
{kind: 1, offset: "onblur", len: 0, typ: NTI62323, name: "onblur", sons: null}, 
{kind: 1, offset: "onchange", len: 0, typ: NTI62327, name: "onchange", sons: null}, 
{kind: 1, offset: "onclick", len: 0, typ: NTI62331, name: "onclick", sons: null}, 
{kind: 1, offset: "ondblclick", len: 0, typ: NTI62335, name: "ondblclick", sons: null}, 
{kind: 1, offset: "onerror", len: 0, typ: NTI62339, name: "onerror", sons: null}, 
{kind: 1, offset: "onfocus", len: 0, typ: NTI62343, name: "onfocus", sons: null}, 
{kind: 1, offset: "onkeydown", len: 0, typ: NTI62347, name: "onkeydown", sons: null}, 
{kind: 1, offset: "onkeypress", len: 0, typ: NTI62351, name: "onkeypress", sons: null}, 
{kind: 1, offset: "onkeyup", len: 0, typ: NTI62355, name: "onkeyup", sons: null}, 
{kind: 1, offset: "onload", len: 0, typ: NTI62359, name: "onload", sons: null}, 
{kind: 1, offset: "onmousedown", len: 0, typ: NTI62363, name: "onmousedown", sons: null}, 
{kind: 1, offset: "onmousemove", len: 0, typ: NTI62367, name: "onmousemove", sons: null}, 
{kind: 1, offset: "onmouseout", len: 0, typ: NTI62371, name: "onmouseout", sons: null}, 
{kind: 1, offset: "onmouseover", len: 0, typ: NTI62375, name: "onmouseover", sons: null}, 
{kind: 1, offset: "onmouseup", len: 0, typ: NTI62379, name: "onmouseup", sons: null}, 
{kind: 1, offset: "onreset", len: 0, typ: NTI62383, name: "onreset", sons: null}, 
{kind: 1, offset: "onselect", len: 0, typ: NTI62387, name: "onselect", sons: null}, 
{kind: 1, offset: "onsubmit", len: 0, typ: NTI62391, name: "onsubmit", sons: null}, 
{kind: 1, offset: "onunload", len: 0, typ: NTI62395, name: "onunload", sons: null}]};
NTI62204.node = NNI62204;
NTI62204.base = NTI40208;
NTI62222.base = NTI62204;
NTI62230.base = NTI62222;
NTI62228.base = NTI62230;
NTI64057.base = NTI62228;
NTI185769.base = NTI36042;
var NNI40262 = {kind: 2, len: 0, offset: 0, typ: null, name: null, sons: []};
NTI40262.node = NNI40262;
NTI40262.base = NTI40228;
var NNI183048 = {kind: 2, len: 2, offset: 0, typ: null, name: null, sons: [{kind: 1, offset: "Field0", len: 0, typ: NTI36006, name: "Field0", sons: null}, 
{kind: 1, offset: "Field1", len: 0, typ: NTI36032, name: "Field1", sons: null}]};
NTI183048.node = NNI183048;

function makeNimstrLit(c_53212) {
		  var ln = c_53212.length;
  var result = new Array(ln);
  for (var i = 0; i < ln; ++i) {
    result[i] = c_53212.charCodeAt(i);
  }
  return result;
  

	
}

function setConstr() {
		    var result = {};
    for (var i = 0; i < arguments.length; ++i) {
      var x = arguments[i];
      if (typeof(x) == "object") {
        for (var j = x[0]; j <= x[1]; ++j) {
          result[j] = true;
        }
      } else {
        result[x] = true;
      }
    }
    return result;
  

	
}
var ConstSet1 = setConstr(17, 16, 4, 18, 27, 19, 23, 22, 21);

function nimCopy(dest_54230, src_54231, ti_54232) {
	var result_54419 = null;

		switch (ti_54232.kind) {
		case 21:
		case 22:
		case 23:
		case 5:
			if (!(is_fat_pointer_54201(ti_54232))) {
			result_54419 = src_54231;
			}
			else {
				result_54419 = [src_54231[0], src_54231[1]];
			}
			
			break;
		case 19:
			      if (dest_54230 === null || dest_54230 === undefined) {
        dest_54230 = {};
      }
      else {
        for (var key in dest_54230) { delete dest_54230[key]; }
      }
      for (var key in src_54231) { dest_54230[key] = src_54231[key]; }
      result_54419 = dest_54230;
    
			break;
		case 18:
		case 17:
			if (!((ti_54232.base == null))) {
			result_54419 = nimCopy(dest_54230, src_54231, ti_54232.base);
			}
			else {
			if ((ti_54232.kind == 17)) {
			result_54419 = (dest_54230 === null || dest_54230 === undefined) ? {m_type: ti_54232} : dest_54230;
			}
			else {
				result_54419 = (dest_54230 === null || dest_54230 === undefined) ? {} : dest_54230;
			}
			}
			nimCopyAux(result_54419, src_54231, ti_54232.node);
			break;
		case 24:
		case 4:
		case 27:
		case 16:
			      if (src_54231 === null) {
        result_54419 = null;
      }
      else {
        if (dest_54230 === null || dest_54230 === undefined) {
          dest_54230 = new Array(src_54231.length);
        }
        else {
          dest_54230.length = src_54231.length;
        }
        result_54419 = dest_54230;
        for (var i = 0; i < src_54231.length; ++i) {
          result_54419[i] = nimCopy(result_54419[i], src_54231[i], ti_54232.base);
        }
      }
    
			break;
		case 28:
			      if (src_54231 !== null) {
        result_54419 = src_54231.slice(0);
      }
    
			break;
		default: 
			result_54419 = src_54231;
			break;
		}

	return result_54419;

}

function arrayConstr(len_54480, value_54481, typ_54482) {
		    var result = new Array(len_54480);
    for (var i = 0; i < len_54480; ++i) result[i] = nimCopy(null, value_54481, typ_54482);
    return result;
  

	
}

function cstrToNimstr(c_53229) {
		  var ln = c_53229.length;
  var result = new Array(ln);
  var r = 0;
  for (var i = 0; i < ln; ++i) {
    var ch = c_53229.charCodeAt(i);

    if (ch < 128) {
      result[r] = ch;
    }
    else {
      if (ch < 2048) {
        result[r] = (ch >> 6) | 192;
      }
      else {
        if (ch < 55296 || ch >= 57344) {
          result[r] = (ch >> 12) | 224;
        }
        else {
            ++i;
            ch = 65536 + (((ch & 1023) << 10) | (c_53229.charCodeAt(i) & 1023));
            result[r] = (ch >> 18) | 240;
            ++r;
            result[r] = ((ch >> 12) & 63) | 128;
        }
        ++r;
        result[r] = ((ch >> 6) & 63) | 128;
      }
      ++r;
      result[r] = (ch & 63) | 128;
    }
    ++r;
  }
  return result;
  

	
}

function toJSStr(s_53246) {
		  if (s_53246 === null) return "";
  var len = s_53246.length;
  var asciiPart = new Array(len);
  var fcc = String.fromCharCode;
  var nonAsciiPart = null;
  var nonAsciiOffset = 0;
  for (var i = 0; i < len; ++i) {
    if (nonAsciiPart !== null) {
      var offset = (i - nonAsciiOffset) * 2;
      var code = s_53246[i].toString(16);
      if (code.length == 1) {
        code = "0"+code;
      }
      nonAsciiPart[offset] = "%";
      nonAsciiPart[offset + 1] = code;
    }
    else if (s_53246[i] < 128)
      asciiPart[i] = fcc(s_53246[i]);
    else {
      asciiPart.length = i;
      nonAsciiOffset = i;
      nonAsciiPart = new Array((len - i) * 2);
      --i;
    }
  }
  asciiPart = asciiPart.join("");
  return (nonAsciiPart === null) ?
      asciiPart : asciiPart + decodeURIComponent(nonAsciiPart.join(""));
  

	
}

function raiseException(e_52818, ename_52819) {
		e_52818.name = ename_52819;
		if ((excHandler == 0)) {
		unhandledException(e_52818);
		}
		
		e_52818.trace = nimCopy(null, raw_write_stack_trace_52641(), NTI36040);
		throw e_52818;

	
}

function addInt(a_53603, b_53604) {
		    var result = a_53603 + b_53604;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}

function chckIndx(i_54499, a_54500, b_54501) {
			var Tmp1;

	var result_54502 = 0;

	BeforeRet: do {
			if (!(a_54500 <= i_54499)) Tmp1 = false; else {				Tmp1 = (i_54499 <= b_54501);			}		if (Tmp1) {
		result_54502 = i_54499;
		break BeforeRet;
		}
		else {
		raiseIndexError();
		}
		
	} while (false);

	return result_54502;

}

function subInt(a_53621, b_53622) {
		    var result = a_53621 - b_53622;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet2 = setConstr([65, 90]);

function chckRange(i_54518, a_54519, b_54520) {
			var Tmp1;

	var result_54521 = 0;

	BeforeRet: do {
			if (!(a_54519 <= i_54518)) Tmp1 = false; else {				Tmp1 = (i_54518 <= b_54520);			}		if (Tmp1) {
		result_54521 = i_54518;
		break BeforeRet;
		}
		else {
		raiseRangeError();
		}
		
	} while (false);

	return result_54521;

}
var ConstSet3 = setConstr(95, 32, 46);
var ConstSet4 = setConstr(95, 32, 46);

function mulInt(a_53639, b_53640) {
		    var result = a_53639 * b_53640;
    if (result > 2147483647 || result < -2147483648) raiseOverflow();
    return result;
  

	
}
var ConstSet5 = setConstr([97, 122]);
var ConstSet6 = setConstr([65, 90], [97, 122]);
var ConstSet7 = setConstr([97, 122]);
var ConstSet8 = setConstr([65, 90]);

function nimMax(a_53958, b_53959) {
		var Tmp1;

	var result_53960 = 0;

	BeforeRet: do {
		if ((b_53959 <= a_53958)) {
		Tmp1 = a_53958;
		}
		else {
		Tmp1 = b_53959;
		}
		
		result_53960 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_53960;

}

function nimMin(a_53940, b_53941) {
		var Tmp1;

	var result_53942 = 0;

	BeforeRet: do {
		if ((a_53940 <= b_53941)) {
		Tmp1 = a_53940;
		}
		else {
		Tmp1 = b_53941;
		}
		
		result_53942 = Tmp1;
		break BeforeRet;
	} while (false);

	return result_53942;

}
var nim_program_result = 0;
var global_raise_hook_50418 = [null];
var local_raise_hook_50423 = [null];
var out_of_mem_hook_50426 = [null];
  if (!Math.trunc) {
    Math.trunc = function(v) {
      v = +v;
      if (!isFinite(v)) return v;

      return (v - v % 1)   ||   (v < 0 ? -0 : v === 0 ? v : 0);
    };
  }
var dorender_64091 = [null];
var draw_timeout_64092 = [null];
var current_tree_64093 = [null];
var link_counter_64542 = [0];
var radio_counter_65028 = [0];
var alternative_185499 = [null];

function is_fat_pointer_54201(ti_54203) {
	var result_54204 = false;

	BeforeRet: do {
		result_54204 = !((ConstSet1[ti_54203.base.kind] != undefined));
		break BeforeRet;
	} while (false);

	return result_54204;

}

function nimCopyAux(dest_54235, src_54236, n_54238) {
		switch (n_54238.kind) {
		case 0:
			break;
		case 1:
			      dest_54235[n_54238.offset] = nimCopy(dest_54235[n_54238.offset], src_54236[n_54238.offset], n_54238.typ);
    
			break;
		case 2:
			    for (var i = 0; i < n_54238.sons.length; i++) {
      nimCopyAux(dest_54235, src_54236, n_54238.sons[i]);
    }
    
			break;
		case 3:
			      dest_54235[n_54238.offset] = nimCopy(dest_54235[n_54238.offset], src_54236[n_54238.offset], n_54238.typ);
      for (var i = 0; i < n_54238.sons.length; ++i) {
        nimCopyAux(dest_54235, src_54236, n_54238.sons[i][1]);
      }
    
			break;
		}

	
}

function add_50438(x_50441, x_50441_Idx, y_50442) {
		      if (x_50441[x_50441_Idx] === null) { x_50441[x_50441_Idx] = []; }
      var off = x_50441[x_50441_Idx].length;
      x_50441[x_50441_Idx].length += y_50442.length;
      for (var i = 0; i < y_50442.length; ++i) {
        x_50441[x_50441_Idx][off+i] = y_50442.charCodeAt(i);
      }
    

	
}

function aux_write_stack_trace_52339(f_52341) {
					var Tmp3;

	var result_52342 = [null];

		var it_52350 = f_52341;
		var i_52352 = 0;
		var total_52354 = 0;
		var temp_frames_52361 = arrayConstr(64, {Field0: null, Field1: 0}, NTI52344);
		L1: do {
				L2: while (true) {
					if (!!((it_52350 == null))) Tmp3 = false; else {						Tmp3 = (i_52352 <= 63);					}				if (!Tmp3) break L2;
					temp_frames_52361[i_52352].Field0 = it_52350.procname;
					temp_frames_52361[i_52352].Field1 = it_52350.line;
					i_52352 += 1;
					total_52354 += 1;
					it_52350 = it_52350.prev;
				}
		} while(false);
		L4: do {
				L5: while (true) {
				if (!!((it_52350 == null))) break L5;
					total_52354 += 1;
					it_52350 = it_52350.prev;
				}
		} while(false);
		result_52342[0] = nimCopy(null, [], NTI36040);
		if (!((total_52354 == i_52352))) {
		if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit("(")); } else { result_52342[0] = makeNimstrLit("("); };
		if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(cstrToNimstr(((total_52354 - i_52352))+"")); } else { result_52342[0] = cstrToNimstr(((total_52354 - i_52352))+"").slice(); };
		if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit(" calls omitted) ...\x0A")); } else { result_52342[0] = makeNimstrLit(" calls omitted) ...\x0A"); };
		}
		
		L6: do {
			var j_52624 = 0;
			var colontmp__185652 = 0;
			colontmp__185652 = (i_52352 - 1);
			var res_185658 = colontmp__185652;
			L7: do {
					L8: while (true) {
					if (!(0 <= res_185658)) break L8;
						j_52624 = res_185658;
						add_50438(result_52342, 0, temp_frames_52361[j_52624].Field0);
						if ((0 < temp_frames_52361[j_52624].Field1)) {
						if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit(", line: ")); } else { result_52342[0] = makeNimstrLit(", line: "); };
						if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(cstrToNimstr((temp_frames_52361[j_52624].Field1)+"")); } else { result_52342[0] = cstrToNimstr((temp_frames_52361[j_52624].Field1)+"").slice(); };
						}
						
						if (result_52342[0] != null) { result_52342[0] = (result_52342[0]).concat(makeNimstrLit("\x0A")); } else { result_52342[0] = makeNimstrLit("\x0A"); };
						res_185658 -= 1;
					}
			} while(false);
		} while(false);

	return result_52342[0];

}

function raw_write_stack_trace_52641() {
	var result_52643 = null;

		if (!((framePtr == null))) {
		result_52643 = nimCopy(null, (makeNimstrLit("Traceback (most recent call last)\x0A") || []).concat(aux_write_stack_trace_52339(framePtr) || []), NTI36040);
		}
		else {
			result_52643 = nimCopy(null, makeNimstrLit("No stack traceback available\x0A"), NTI36040);
		}
		

	return result_52643;

}

function unhandledException(e_52705) {
		var buf_52706 = [[]];
		if (!(((e_52705.message != null ? e_52705.message.length : 0) == 0))) {
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit("Error: unhandled exception: ")); } else { buf_52706[0] = makeNimstrLit("Error: unhandled exception: "); };
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(e_52705.message); } else { buf_52706[0] = e_52705.message.slice(); };
		}
		else {
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit("Error: unhandled exception")); } else { buf_52706[0] = makeNimstrLit("Error: unhandled exception"); };
		}
		
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit(" [")); } else { buf_52706[0] = makeNimstrLit(" ["); };
		add_50438(buf_52706, 0, e_52705.name);
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(makeNimstrLit("]\x0A")); } else { buf_52706[0] = makeNimstrLit("]\x0A"); };
		if (buf_52706[0] != null) { buf_52706[0] = (buf_52706[0]).concat(raw_write_stack_trace_52641()); } else { buf_52706[0] = raw_write_stack_trace_52641().slice(); };
		var cbuf_52801 = toJSStr(buf_52706[0]);
		framePtr = null;
		  if (typeof(Error) !== "undefined") {
    throw new Error(cbuf_52801);
  }
  else {
    throw cbuf_52801;
  }
  

	
}

function raiseOverflow() {
		var e_53059 = null;
		e_53059 = {m_type: NTI40246, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53059.message = nimCopy(null, makeNimstrLit("over- or underflow"), NTI36040);
		e_53059.parent = null;
		raiseException(e_53059, "OverflowError");

	
}

function is_whitespace_184642(text_184644) {
		     return !/[^\s]/.test(text_184644);
  

	
}

function is_whitespace_184659(x_184661) {
		var Tmp1;
		var Tmp2;

	var result_184662 = false;

	var F={procname:"dochack.isWhitespace",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 102;
		if (!(x_184661.nodeName == "#text")) Tmp2 = false; else {			Tmp2 = is_whitespace_184642(x_184661.textContent);		}		if (Tmp2) Tmp1 = true; else {			Tmp1 = (x_184661.nodeName == "#comment");		}		result_184662 = Tmp1;
	framePtr = F.prev;

	return result_184662;

}

function raiseIndexError() {
		var e_53143 = null;
		e_53143 = {m_type: NTI40258, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53143.message = nimCopy(null, makeNimstrLit("index out of bounds"), NTI36040);
		e_53143.parent = null;
		raiseException(e_53143, "IndexError");

	
}

function to_toc_184676(x_184678, father_184679) {
						var Tmp5;
						var Tmp6;
						var Tmp7;
			var Tmp14;

	var F={procname:"dochack.toToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if ((x_184678.nodeName == "UL")) {
		F.line = 107;
		var f_184702 = {heading: null, kids: [], sortId: (father_184679.kids != null ? father_184679.kids.length : 0), doSort: false};
		F.line = 108;
		var i_184704 = 0;
		L1: do {
			F.line = 109;
				L2: while (true) {
				if (!(i_184704 < x_184678.childNodes.length)) break L2;
					F.line = 110;
					var nxt_184705 = addInt(i_184704, 1);
					L3: do {
						F.line = 111;
							L4: while (true) {
							if (!((nxt_184705 < x_184678.childNodes.length) && is_whitespace_184659(x_184678.childNodes[nxt_184705]))) break L4;
								F.line = 112;
								nxt_184705 = addInt(nxt_184705, 1);
							}
					} while(false);
						if (!(nxt_184705 < x_184678.childNodes.length)) Tmp7 = false; else {							Tmp7 = (x_184678.childNodes[i_184704].nodeName == "LI");						}						if (!Tmp7) Tmp6 = false; else {							Tmp6 = (x_184678.childNodes[i_184704].childNodes.length == 1);						}						if (!Tmp6) Tmp5 = false; else {							Tmp5 = (x_184678.childNodes[nxt_184705].nodeName == "UL");						}					if (Tmp5) {
					F.line = 115;
					var e_184737 = {heading: x_184678.childNodes[i_184704].childNodes[0], kids: [], sortId: (f_184702.kids != null ? f_184702.kids.length : 0), doSort: false};
					F.line = 116;
					var it_184738 = x_184678.childNodes[nxt_184705];
					L8: do {
						F.line = 117;
						var j_184748 = 0;
						F.line = 3715;
						var colontmp__185624 = 0;
						F.line = 117;
						colontmp__185624 = it_184738.childNodes.length;
						F.line = 3716;
						var i_185626 = 0;
						L9: do {
							F.line = 3717;
								L10: while (true) {
								if (!(i_185626 < colontmp__185624)) break L10;
									F.line = 117;
									j_184748 = i_185626;
									F.line = 118;
									to_toc_184676(it_184738.childNodes[j_184748], e_184737);
									F.line = 3719;
									i_185626 = addInt(i_185626, 1);
								}
						} while(false);
					} while(false);
					F.line = 119;
					if (f_184702.kids != null) { f_184702.kids.push(e_184737); } else { f_184702.kids = [e_184737]; };
					F.line = 120;
					i_184704 = addInt(nxt_184705, 1);
					}
					else {
						F.line = 122;
						to_toc_184676(x_184678.childNodes[i_184704], f_184702);
						F.line = 123;
						i_184704 = addInt(i_184704, 1);
					}
					
				}
		} while(false);
		F.line = 124;
		if (father_184679.kids != null) { father_184679.kids.push(f_184702); } else { father_184679.kids = [f_184702]; };
		}
		else {
		if (is_whitespace_184659(x_184678)) {
		}
		else {
		if ((x_184678.nodeName == "LI")) {
		F.line = 128;
		var idx_184794 = [];
		L11: do {
			F.line = 129;
			var i_184804 = 0;
			F.line = 3715;
			var colontmp__185630 = 0;
			F.line = 129;
			colontmp__185630 = x_184678.childNodes.length;
			F.line = 3716;
			var i_185632 = 0;
			L12: do {
				F.line = 3717;
					L13: while (true) {
					if (!(i_185632 < colontmp__185630)) break L13;
						F.line = 129;
						i_184804 = i_185632;
						if (!(is_whitespace_184659(x_184678.childNodes[i_184804]))) {
						F.line = 130;
						if (idx_184794 != null) { idx_184794.push(i_184804); } else { idx_184794 = [i_184804]; };
						}
						
						F.line = 3719;
						i_185632 = addInt(i_185632, 1);
					}
			} while(false);
		} while(false);
			if (!((idx_184794 != null ? idx_184794.length : 0) == 2)) Tmp14 = false; else {				Tmp14 = (x_184678.childNodes[idx_184794[chckIndx(1, 0, idx_184794.length+0-1)-0]].nodeName == "UL");			}		if (Tmp14) {
		F.line = 132;
		var e_184844 = {heading: x_184678.childNodes[idx_184794[chckIndx(0, 0, idx_184794.length+0-1)-0]], kids: [], sortId: (father_184679.kids != null ? father_184679.kids.length : 0), doSort: false};
		F.line = 134;
		var it_184845 = x_184678.childNodes[idx_184794[chckIndx(1, 0, idx_184794.length+0-1)-0]];
		L15: do {
			F.line = 135;
			var j_184855 = 0;
			F.line = 3715;
			var colontmp__185637 = 0;
			F.line = 135;
			colontmp__185637 = it_184845.childNodes.length;
			F.line = 3716;
			var i_185639 = 0;
			L16: do {
				F.line = 3717;
					L17: while (true) {
					if (!(i_185639 < colontmp__185637)) break L17;
						F.line = 135;
						j_184855 = i_185639;
						F.line = 136;
						to_toc_184676(it_184845.childNodes[j_184855], e_184844);
						F.line = 3719;
						i_185639 = addInt(i_185639, 1);
					}
			} while(false);
		} while(false);
		F.line = 137;
		if (father_184679.kids != null) { father_184679.kids.push(e_184844); } else { father_184679.kids = [e_184844]; };
		}
		else {
			L18: do {
				F.line = 139;
				var i_184875 = 0;
				F.line = 3715;
				var colontmp__185643 = 0;
				F.line = 139;
				colontmp__185643 = x_184678.childNodes.length;
				F.line = 3716;
				var i_185645 = 0;
				L19: do {
					F.line = 3717;
						L20: while (true) {
						if (!(i_185645 < colontmp__185643)) break L20;
							F.line = 139;
							i_184875 = i_185645;
							F.line = 140;
							to_toc_184676(x_184678.childNodes[i_184875], father_184679);
							F.line = 3719;
							i_185645 = addInt(i_185645, 1);
						}
				} while(false);
			} while(false);
		}
		
		}
		else {
			F.line = 142;
		if (father_184679.kids != null) { father_184679.kids.push({heading: x_184678, kids: [], sortId: (father_184679.kids != null ? father_184679.kids.length : 0), doSort: false}); } else { father_184679.kids = [{heading: x_184678, kids: [], sortId: (father_184679.kids != null ? father_184679.kids.length : 0), doSort: false}]; };
		}
		}}
	framePtr = F.prev;

	
}

function extract_items_184179(x_184181, heading_184182, items_184185, items_184185_Idx) {
			var Tmp1;

	var F={procname:"dochack.extractItems",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_184181 == null)) {
		F.line = 49;
		break BeforeRet;
		}
		
			if (!!((x_184181.heading == null))) Tmp1 = false; else {				Tmp1 = (x_184181.heading.textContent == heading_184182);			}		if (Tmp1) {
		L2: do {
			F.line = 51;
			var i_184224 = 0;
			F.line = 3715;
			var colontmp__185664 = 0;
			F.line = 51;
			colontmp__185664 = (x_184181.kids != null ? x_184181.kids.length : 0);
			F.line = 3716;
			var i_185666 = 0;
			L3: do {
				F.line = 3717;
					L4: while (true) {
					if (!(i_185666 < colontmp__185664)) break L4;
						F.line = 51;
						i_184224 = i_185666;
						F.line = 52;
						if (items_184185[items_184185_Idx] != null) { items_184185[items_184185_Idx].push(x_184181.kids[chckIndx(i_184224, 0, x_184181.kids.length+0-1)-0].heading); } else { items_184185[items_184185_Idx] = [x_184181.kids[chckIndx(i_184224, 0, x_184181.kids.length+0-1)-0].heading]; };
						F.line = 3719;
						i_185666 = addInt(i_185666, 1);
					}
			} while(false);
		} while(false);
		}
		else {
			L5: do {
				F.line = 54;
				var i_184251 = 0;
				F.line = 3715;
				var colontmp__185670 = 0;
				F.line = 54;
				colontmp__185670 = (x_184181.kids != null ? x_184181.kids.length : 0);
				F.line = 3716;
				var i_185672 = 0;
				L6: do {
					F.line = 3717;
						L7: while (true) {
						if (!(i_185672 < colontmp__185670)) break L7;
							F.line = 54;
							i_184251 = i_185672;
							F.line = 55;
							var it_184252 = x_184181.kids[chckIndx(i_184251, 0, x_184181.kids.length+0-1)-0];
							F.line = 56;
							extract_items_184179(it_184252, heading_184182, items_184185, items_184185_Idx);
							F.line = 3719;
							i_185672 = addInt(i_185672, 1);
						}
				} while(false);
			} while(false);
		}
		
	} while (false);
	framePtr = F.prev;

	
}

function tree_64349(tag_64351, kids_64353) {
	var result_64354 = null;

	var F={procname:"karax.tree",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 103;
		result_64354 = document.createElement(toJSStr(tag_64351));
		L1: do {
			F.line = 104;
			var k_64392 = null;
			F.line = 2302;
			var i_185694 = 0;
			L2: do {
				F.line = 2303;
					L3: while (true) {
					if (!(i_185694 < (kids_64353 != null ? kids_64353.length : 0))) break L3;
						F.line = 104;
						k_64392 = kids_64353[chckIndx(i_185694, 0, kids_64353.length+0-1)-0];
						F.line = 105;
						result_64354.appendChild(k_64392);
						F.line = 2305;
						i_185694 = addInt(i_185694, 1);
					}
			} while(false);
		} while(false);
	framePtr = F.prev;

	return result_64354;

}

function text_64483(s_64485) {
	var result_64486 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 113;
		result_64486 = document.createTextNode(s_64485);
	framePtr = F.prev;

	return result_64486;

}

function set_attr_65304(e_65306, key_65307, value_65308) {
	var F={procname:"karax.setAttr",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 273;
		e_65306.setAttribute(key_65307, value_65308);
	framePtr = F.prev;

	
}

function sys_fatal_57437(message_57443) {
	var F={procname:"sysFatal.sysFatal",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3008;
		var e_57445 = null;
		F.line = 3009;
		e_57445 = {m_type: NTI40250, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		F.line = 3010;
		e_57445.message = nimCopy(null, message_57443, NTI36040);
		F.line = 3011;
		raiseException(e_57445, "AssertionError");
	framePtr = F.prev;

	
}

function raise_assert_57432(msg_57434) {
	var F={procname:"system.raiseAssert",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3971;
		sys_fatal_57437(msg_57434);
	framePtr = F.prev;

	
}

function failed_assert_impl_57480(msg_57482) {
	var F={procname:"system.failedAssertImpl",prev:framePtr,filename:"../../lib/system.nim",line:0};
	framePtr = F;
		F.line = 3978;
		raise_assert_57432(msg_57482);
	framePtr = F.prev;

	
}

function uncovered_184982(x_184984) {
			var Tmp1;
		var Tmp2;

	var result_184985 = null;

	var F={procname:"dochack.uncovered",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
			if (!((x_184984.kids != null ? x_184984.kids.length : 0) == 0)) Tmp1 = false; else {				Tmp1 = !((x_184984.heading == null));			}		if (Tmp1) {
		F.line = 162;
		if (!(x_184984.heading.hasOwnProperty('__karaxMarker__'))) {
		Tmp2 = x_184984;
		}
		else {
		Tmp2 = null;
		}
		
		result_184985 = Tmp2;
		break BeforeRet;
		}
		
		F.line = 163;
		result_184985 = {heading: x_184984.heading, kids: [], sortId: x_184984.sortId, doSort: x_184984.doSort};
		L3: do {
			F.line = 165;
			var i_185035 = 0;
			F.line = 3715;
			var colontmp__185707 = 0;
			F.line = 165;
			colontmp__185707 = (x_184984.kids != null ? x_184984.kids.length : 0);
			F.line = 3716;
			var i_185709 = 0;
			L4: do {
				F.line = 3717;
					L5: while (true) {
					if (!(i_185709 < colontmp__185707)) break L5;
						F.line = 165;
						i_185035 = i_185709;
						F.line = 166;
						var y_185036 = uncovered_184982(x_184984.kids[chckIndx(i_185035, 0, x_184984.kids.length+0-1)-0]);
						if (!((y_185036 == null))) {
						F.line = 167;
						if (result_184985.kids != null) { result_184985.kids.push(y_185036); } else { result_184985.kids = [y_185036]; };
						}
						
						F.line = 3719;
						i_185709 = addInt(i_185709, 1);
					}
			} while(false);
		} while(false);
		if (((result_184985.kids != null ? result_184985.kids.length : 0) == 0)) {
		F.line = 168;
		result_184985 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_184985;

}

function merge_tocs_185078(orig_185080, news_185081) {
	var result_185082 = null;

	var F={procname:"dochack.mergeTocs",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 171;
		result_185082 = uncovered_184982(orig_185080);
		if ((result_185082 == null)) {
		F.line = 173;
		result_185082 = news_185081;
		}
		else {
			L1: do {
				F.line = 175;
				var i_185110 = 0;
				F.line = 3715;
				var colontmp__185700 = 0;
				F.line = 175;
				colontmp__185700 = (news_185081.kids != null ? news_185081.kids.length : 0);
				F.line = 3716;
				var i_185702 = 0;
				L2: do {
					F.line = 3717;
						L3: while (true) {
						if (!(i_185702 < colontmp__185700)) break L3;
							F.line = 175;
							i_185110 = i_185702;
							F.line = 176;
							if (result_185082.kids != null) { result_185082.kids.push(news_185081.kids[chckIndx(i_185110, 0, news_185081.kids.length+0-1)-0]); } else { result_185082.kids = [news_185081.kids[chckIndx(i_185110, 0, news_185081.kids.length+0-1)-0]]; };
							F.line = 3719;
							i_185702 = addInt(i_185702, 1);
						}
				} while(false);
			} while(false);
		}
		
	framePtr = F.prev;

	return result_185082;

}

function build_toc_185134(orig_185136, types_185138, procs_185139) {
	var result_185140 = null;

	var F={procname:"dochack.buildToc",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 179;
		var new_stuff_185156 = {heading: null, kids: [], doSort: true, sortId: 0};
		L1: do {
			F.line = 180;
			var t_185414 = null;
			F.line = 4010;
			var i_185687 = 0;
			F.line = 4011;
			var l_185689 = (types_185138 != null ? types_185138.length : 0);
			L2: do {
				F.line = 4012;
					L3: while (true) {
					if (!(i_185687 < l_185689)) break L3;
						F.line = 180;
						t_185414 = types_185138[chckIndx(i_185687, 0, types_185138.length+0-1)-0];
						F.line = 181;
						var c_185430 = {heading: t_185414.cloneNode(true), kids: [], doSort: true, sortId: 0};
						F.line = 182;
						t_185414.__karaxMarker__ = true;
						L4: do {
							F.line = 183;
							var p_185439 = null;
							F.line = 4010;
							var i_185682 = 0;
							F.line = 4011;
							var l_185684 = (procs_185139 != null ? procs_185139.length : 0);
							L5: do {
								F.line = 4012;
									L6: while (true) {
									if (!(i_185682 < l_185684)) break L6;
										F.line = 183;
										p_185439 = procs_185139[chckIndx(i_185682, 0, procs_185139.length+0-1)-0];
										if (!(p_185439.hasOwnProperty('__karaxMarker__'))) {
										F.line = 185;
										var xx_185440 = p_185439.parentNode.getElementsByClassName("attachedType");
										if ((((xx_185440 != null ? xx_185440.length : 0) == 1) && (xx_185440[chckIndx(0, 0, xx_185440.length+0-1)-0].textContent == t_185414.textContent))) {
										F.line = 188;
										var q_185450 = tree_64349(makeNimstrLit("A"), [text_64483(p_185439.title)]);
										F.line = 189;
										set_attr_65304(q_185450, "href", p_185439.getAttribute("href"));
										F.line = 190;
										if (c_185430.kids != null) { c_185430.kids.push({heading: q_185450, kids: [], sortId: 0, doSort: false}); } else { c_185430.kids = [{heading: q_185450, kids: [], sortId: 0, doSort: false}]; };
										F.line = 191;
										p_185439.__karaxMarker__ = true;
										}
										
										}
										
										F.line = 4014;
										i_185682 = addInt(i_185682, 1);
										if (!(((procs_185139 != null ? procs_185139.length : 0) == l_185684))) {
										F.line = 4015;
										failed_assert_impl_57480(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4015, 11) `len(a) == L` seq modified while iterating over it"));
										}
										
									}
							} while(false);
						} while(false);
						F.line = 192;
						if (new_stuff_185156.kids != null) { new_stuff_185156.kids.push(c_185430); } else { new_stuff_185156.kids = [c_185430]; };
						F.line = 4014;
						i_185687 = addInt(i_185687, 1);
						if (!(((types_185138 != null ? types_185138.length : 0) == l_185689))) {
						F.line = 4015;
						failed_assert_impl_57480(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4015, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		F.line = 193;
		result_185140 = merge_tocs_185078(orig_185136, new_stuff_185156);
	framePtr = F.prev;

	return result_185140;

}

function add_64500(parent_64502, kid_64503) {
			var Tmp1;
				var Tmp2;

	var F={procname:"karax.add",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
			if (!(parent_64502.nodeName == "TR")) Tmp1 = false; else {				if ((kid_64503.nodeName == "TD")) Tmp2 = true; else {					Tmp2 = (kid_64503.nodeName == "TH");				}				Tmp1 = Tmp2;			}		if (Tmp1) {
		F.line = 117;
		var k_64504 = document.createElement("TD");
		F.line = 118;
		k_64504.appendChild(kid_64503);
		F.line = 119;
		parent_64502.appendChild(k_64504);
		}
		else {
			F.line = 121;
		parent_64502.appendChild(kid_64503);
		}
		
	framePtr = F.prev;

	
}

function set_class_65287(e_65289, value_65290) {
	var F={procname:"karax.setClass",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 270;
		e_65289.setAttribute("class", toJSStr(value_65290));
	framePtr = F.prev;

	
}

function to_html_184266(x_184268, is_root_184269) {
			var Tmp1;

		function HEX3Aanonymous_184320(a_184322, b_184323) {
					var Tmp1;

			var result_184324 = 0;

			var F={procname:"toHtml.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
			BeforeRet: do {
					if (!!((a_184322.heading == null))) Tmp1 = false; else {						Tmp1 = !((b_184323.heading == null));					}				if (Tmp1) {
				F.line = 74;
				var x_184347 = a_184322.heading.textContent;
				F.line = 75;
				var y_184348 = b_184323.heading.textContent;
				if ((x_184347 < y_184348)) {
				F.line = 76;
				result_184324 = -1;
				break BeforeRet;
				}
				
				if ((y_184348 < x_184347)) {
				F.line = 77;
				result_184324 = 1;
				break BeforeRet;
				}
				
				F.line = 78;
				result_184324 = 0;
				break BeforeRet;
				}
				else {
					F.line = 81;
					result_184324 = subInt(a_184322.sortId, b_184323.sortId);
					break BeforeRet;
				}
				
			} while (false);
			framePtr = F.prev;

			return result_184324;

		}

	var result_184270 = null;

	var F={procname:"dochack.toHtml",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
	BeforeRet: do {
		if ((x_184268 == null)) {
		F.line = 59;
		result_184270 = null;
		break BeforeRet;
		}
		
		if (((x_184268.kids != null ? x_184268.kids.length : 0) == 0)) {
		if ((x_184268.heading == null)) {
		F.line = 61;
		result_184270 = null;
		break BeforeRet;
		}
		
		F.line = 62;
		result_184270 = x_184268.heading.cloneNode(true);
		break BeforeRet;
		}
		
		F.line = 63;
		result_184270 = tree_64349(makeNimstrLit("DIV"), []);
			if (!!((x_184268.heading == null))) Tmp1 = false; else {				Tmp1 = !(x_184268.heading.hasOwnProperty('__karaxMarker__'));			}		if (Tmp1) {
		F.line = 65;
		add_64500(result_184270, x_184268.heading.cloneNode(true));
		}
		
		F.line = 66;
		var ul_184317 = tree_64349(makeNimstrLit("UL"), []);
		if (is_root_184269) {
		F.line = 68;
		set_class_65287(ul_184317, makeNimstrLit("simple simple-toc"));
		}
		else {
			F.line = 70;
		set_class_65287(ul_184317, makeNimstrLit("simple"));
		}
		
		if (x_184268.doSort) {
		F.line = 72;
		x_184268.kids.sort(HEX3Aanonymous_184320);
		}
		
		L2: do {
			F.line = 83;
			var k_184614 = null;
			F.line = 4008;
			var colontmp__185715 = null;
			F.line = 83;
			colontmp__185715 = x_184268.kids;
			F.line = 4010;
			var i_185718 = 0;
			F.line = 4011;
			var l_185720 = (colontmp__185715 != null ? colontmp__185715.length : 0);
			L3: do {
				F.line = 4012;
					L4: while (true) {
					if (!(i_185718 < l_185720)) break L4;
						F.line = 83;
						k_184614 = colontmp__185715[chckIndx(i_185718, 0, colontmp__185715.length+0-1)-0];
						F.line = 84;
						var y_184615 = to_html_184266(k_184614, false);
						if (!((y_184615 == null))) {
						F.line = 86;
						add_64500(ul_184317, tree_64349(makeNimstrLit("LI"), [y_184615]));
						}
						
						F.line = 4014;
						i_185718 = addInt(i_185718, 1);
						if (!(((colontmp__185715 != null ? colontmp__185715.length : 0) == l_185720))) {
						F.line = 4015;
						failed_assert_impl_57480(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4015, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		if (!((ul_184317.childNodes.length == 0))) {
		F.line = 87;
		add_64500(result_184270, ul_184317);
		}
		
		if ((result_184270.childNodes.length == 0)) {
		F.line = 88;
		result_184270 = null;
		}
		
	} while (false);
	framePtr = F.prev;

	return result_184270;

}

function replace_by_id_64161(id_64163, new_tree_64164) {
	var F={procname:"karax.replaceById",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 54;
		var x_64165 = document.getElementById(id_64163);
		F.line = 55;
		x_64165.parentNode.replaceChild(new_tree_64164, x_64165);
		F.line = 56;
		new_tree_64164.id = id_64163;
	framePtr = F.prev;

	
}

function togglevis_185513(d_185515) {
	var F={procname:"dochack.togglevis",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 198;
		    if (d_185515.style.display == 'none')
      d_185515.style.display = 'inline';
    else
      d_185515.style.display = 'none';
  
	framePtr = F.prev;

	
}

function groupBy(value_185531) {
	var F={procname:"dochack.groupBy",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		F.line = 206;
		var toc_185532 = document.getElementById("toc-list");
		if ((alternative_185499[0] == null)) {
		F.line = 208;
		var tt_185555 = {heading: null, kids: [], sortId: 0, doSort: false};
		F.line = 209;
		to_toc_184676(toc_185532, tt_185555);
		F.line = 210;
		tt_185555 = tt_185555.kids[chckIndx(0, 0, tt_185555.kids.length+0-1)-0];
		F.line = 212;
		var types_185572 = [[]];
		F.line = 213;
		var procs_185589 = [[]];
		F.line = 215;
		extract_items_184179(tt_185555, "Types", types_185572, 0);
		F.line = 216;
		extract_items_184179(tt_185555, "Procs", procs_185589, 0);
		F.line = 217;
		extract_items_184179(tt_185555, "Converters", procs_185589, 0);
		F.line = 218;
		extract_items_184179(tt_185555, "Methods", procs_185589, 0);
		F.line = 219;
		extract_items_184179(tt_185555, "Templates", procs_185589, 0);
		F.line = 220;
		extract_items_184179(tt_185555, "Macros", procs_185589, 0);
		F.line = 221;
		extract_items_184179(tt_185555, "Iterators", procs_185589, 0);
		F.line = 223;
		var ntoc_185597 = build_toc_185134(tt_185555, types_185572[0], procs_185589[0]);
		F.line = 224;
		var x_185598 = to_html_184266(ntoc_185597, true);
		F.line = 225;
		alternative_185499[0] = tree_64349(makeNimstrLit("DIV"), [x_185598]);
		}
		
		if ((value_185531 == "type")) {
		F.line = 227;
		replace_by_id_64161("tocRoot", alternative_185499[0]);
		}
		else {
			F.line = 229;
		replace_by_id_64161("tocRoot", tree_64349(makeNimstrLit("DIV"), []));
		}
		
		F.line = 230;
		togglevis_185513(document.getElementById("toc-list"));
	framePtr = F.prev;

	
}
var db_185723 = [null];
var contents_185725 = [null];
var oldtoc_185935 = [null];
var timer_185936 = [null];

function raiseRangeError() {
		var e_53115 = null;
		e_53115 = {m_type: NTI40262, parent: null, name: null, message: null, trace: null, raiseId: 0, up: null};
		e_53115.message = nimCopy(null, makeNimstrLit("value out of range"), NTI36040);
		e_53115.parent = null;
		raiseException(e_53115, "RangeError");

	
}

function nsuToLowerAsciiChar(c_165157) {
	var result_165158 = 0;

	var F={procname:"strutils.toLowerAscii",prev:framePtr,filename:"../../lib/pure/strutils.nim",line:0};
	framePtr = F;
		if ((ConstSet2[c_165157] != undefined)) {
		F.line = 265;
		result_165158 = chckRange(addInt(c_165157, 32), 0, 255);
		}
		else {
			F.line = 267;
			result_165158 = c_165157;
		}
		
	framePtr = F.prev;

	return result_165158;

}

function fuzzy_match_183044(pattern_183046, str_183047) {
							var Tmp4;
							var Tmp5;
								var Tmp6;

	var result_183051 = {Field0: 0, Field1: false};

	var F={procname:"fuzzysearch.fuzzyMatch",prev:framePtr,filename:"fuzzysearch.nim",line:0};
	framePtr = F;
		F.line = 37;
		var score_state_183052 = -100;
		F.line = 38;
		var header_matched_183053 = false;
		F.line = 39;
		var unmatched_leading_char_count_183055 = 0;
		F.line = 40;
		var consecutive_match_count_183057 = 0;
		F.line = 41;
		var str_index_183059 = 0;
		F.line = 42;
		var pat_index_183061 = 0;
		F.line = 43;
		var score_183063 = 0;
		L1: do {
			F.line = 49;
				L2: while (true) {
				if (!((str_index_183059 < (str_183047 != null ? str_183047.length : 0)) && (pat_index_183061 < (pattern_183046 != null ? pattern_183046.length : 0)))) break L2;
					L3: do {
						F.line = 51;
						var pattern_char_183070 = nsuToLowerAsciiChar(pattern_183046.charCodeAt(chckIndx(pat_index_183061, 0, pattern_183046.length+0-1)-0));
						F.line = 52;
						var str_char_183071 = nsuToLowerAsciiChar(str_183047.charCodeAt(chckIndx(str_index_183059, 0, str_183047.length+0-1)-0));
						if ((ConstSet3[pattern_char_183070] != undefined)) {
						F.line = 56;
						pat_index_183061 = addInt(pat_index_183061, 1);
						F.line = 57;
						break L3;
						}
						
						if ((ConstSet4[str_char_183071] != undefined)) {
						F.line = 59;
						str_index_183059 = addInt(str_index_183059, 1);
						F.line = 60;
						break L3;
						}
						
						if ((!(header_matched_183053) && (str_char_183071 == 58))) {
						F.line = 65;
						header_matched_183053 = true;
						F.line = 66;
						score_state_183052 = -100;
						F.line = 67;
						score_183063 = Math.trunc(Math.floor((5.0000000000000000e-01 * score_183063)));
						F.line = 68;
						pat_index_183061 = 0;
						F.line = 69;
						str_index_183059 = addInt(str_index_183059, 1);
						F.line = 70;
						break L3;
						}
						
						if ((str_char_183071 == pattern_char_183070)) {
						F.line = 73;
						switch (score_state_183052) {
						case -100:
						case 20:
							F.line = 75;
							score_state_183052 = 10;
							break;
						case 0:
							F.line = 78;
							score_state_183052 = 5;
							F.line = 78;
							score_183063 = addInt(score_183063, score_state_183052);
							break;
						case 10:
						case 5:
							F.line = 81;
							consecutive_match_count_183057 = addInt(consecutive_match_count_183057, 1);
							F.line = 82;
							score_state_183052 = 5;
							F.line = 83;
							score_183063 = addInt(score_183063, mulInt(5, consecutive_match_count_183057));
							if ((score_state_183052 == 10)) {
							F.line = 86;
							score_183063 = addInt(score_183063, 10);
							}
							
							F.line = 88;
							var on_boundary_183182 = (pat_index_183061 == (pattern_183046 != null ? (pattern_183046.length-1) : -1));
							if ((!(on_boundary_183182) && (str_index_183059 < (str_183047 != null ? (str_183047.length-1) : -1)))) {
							F.line = 91;
							var next_pattern_char_183183 = nsuToLowerAsciiChar(pattern_183046.charCodeAt(chckIndx(addInt(pat_index_183061, 1), 0, pattern_183046.length+0-1)-0));
							F.line = 92;
							var next_str_char_183184 = nsuToLowerAsciiChar(str_183047.charCodeAt(chckIndx(addInt(str_index_183059, 1), 0, str_183047.length+0-1)-0));
							F.line = 95;
							if (!!((ConstSet5[next_str_char_183184] != undefined))) Tmp4 = false; else {								Tmp4 = !((next_str_char_183184 == next_pattern_char_183183));							}							on_boundary_183182 = Tmp4;
							}
							
							if (on_boundary_183182) {
							F.line = 100;
							score_state_183052 = 20;
							F.line = 100;
							score_183063 = addInt(score_183063, score_state_183052);
							}
							
							break;
						case -1:
						case -3:
							F.line = 103;
							if (!((ConstSet6[str_183047.charCodeAt(chckIndx(subInt(str_index_183059, 1), 0, str_183047.length+0-1)-0)] != undefined))) Tmp5 = true; else {								if (!(ConstSet7[str_183047.charCodeAt(chckIndx(subInt(str_index_183059, 1), 0, str_183047.length+0-1)-0)] != undefined)) Tmp6 = false; else {									Tmp6 = (ConstSet8[str_183047.charCodeAt(chckIndx(str_index_183059, 0, str_183047.length+0-1)-0)] != undefined);								}								Tmp5 = Tmp6;							}							var is_leading_char_183239 = Tmp5;
							if (is_leading_char_183239) {
							F.line = 110;
							score_state_183052 = 10;
							}
							else {
								F.line = 114;
								score_state_183052 = 0;
								F.line = 114;
								score_183063 = addInt(score_183063, score_state_183052);
							}
							
							break;
						}
						F.line = 115;
						pat_index_183061 = addInt(pat_index_183061, 1);
						}
						else {
							F.line = 118;
							switch (score_state_183052) {
							case -100:
								F.line = 120;
								score_state_183052 = -3;
								F.line = 120;
								score_183063 = addInt(score_183063, score_state_183052);
								break;
							case 5:
								F.line = 123;
								score_state_183052 = -1;
								F.line = 123;
								score_183063 = addInt(score_183063, score_state_183052);
								F.line = 124;
								consecutive_match_count_183057 = 0;
								break;
							case -3:
								if ((unmatched_leading_char_count_183055 < 3)) {
								F.line = 128;
								score_state_183052 = -3;
								F.line = 128;
								score_183063 = addInt(score_183063, score_state_183052);
								}
								
								F.line = 129;
								unmatched_leading_char_count_183055 = addInt(unmatched_leading_char_count_183055, 1);
								break;
							default: 
								F.line = 132;
								score_state_183052 = -1;
								F.line = 132;
								score_183063 = addInt(score_183063, score_state_183052);
								break;
							}
						}
						
						F.line = 134;
						str_index_183059 = addInt(str_index_183059, 1);
					} while(false);
				}
		} while(false);
		F.line = 136;
		nimCopy(result_183051, {Field0: nimMax(0, score_183063), Field1: (0 < score_183063)}, NTI183048);
	framePtr = F.prev;

	return result_183051;

}

function text_64466(s_64468) {
	var result_64469 = null;

	var F={procname:"karax.text",prev:framePtr,filename:"karax.nim",line:0};
	framePtr = F;
		F.line = 112;
		result_64469 = document.createTextNode(toJSStr(s_64468));
	framePtr = F.prev;

	return result_64469;

}

function dosearch_185743(value_185745) {

		function HEX3Aanonymous_185847(a_185857, b_185859) {
			var result_185865 = 0;

			var F={procname:"dosearch.:anonymous",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 274;
				result_185865 = subInt(b_185859["Field1"], a_185857["Field1"]);
			framePtr = F.prev;

			return result_185865;

		}

	var result_185746 = null;

	var F={procname:"dochack.dosearch",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (((db_185723[0] != null ? db_185723[0].length : 0) == 0)) {
		F.line = 240;
		var stuff_185754 = null;
		F.line = 241;
		    var request = new XMLHttpRequest();
    request.open("GET", "theindex.html", false);
    request.send(null);

    var doc = document.implementation.createHTMLDocument("theindex");
    doc.documentElement.innerHTML = request.responseText;

    //parser=new DOMParser();
    //doc=parser.parseFromString("<html></html>", "text/html");

    stuff_185754 = doc.documentElement;
    
		F.line = 254;
		db_185723[0] = nimCopy(null, stuff_185754.getElementsByClassName("reference"), NTI64057);
		F.line = 255;
		contents_185725[0] = nimCopy(null, [], NTI185769);
		L1: do {
			F.line = 256;
			var ahref_185778 = null;
			F.line = 4010;
			var i_186011 = 0;
			F.line = 4011;
			var l_186013 = (db_185723[0] != null ? db_185723[0].length : 0);
			L2: do {
				F.line = 4012;
					L3: while (true) {
					if (!(i_186011 < l_186013)) break L3;
						F.line = 256;
						ahref_185778 = db_185723[0][chckIndx(i_186011, 0, db_185723[0].length+0-1)-0];
						F.line = 257;
						if (contents_185725[0] != null) { contents_185725[0].push(ahref_185778.getAttribute("data-doc-search-tag")); } else { contents_185725[0] = [ahref_185778.getAttribute("data-doc-search-tag")]; };
						F.line = 4014;
						i_186011 = addInt(i_186011, 1);
						if (!(((db_185723[0] != null ? db_185723[0].length : 0) == l_186013))) {
						F.line = 4015;
						failed_assert_impl_57480(makeNimstrLit("/Users/travis/build/nim-lang/Nim/lib/system.nim(4015, 11) `len(a) == L` seq modified while iterating over it"));
						}
						
					}
			} while(false);
		} while(false);
		}
		
		F.line = 258;
		var ul_185792 = tree_64349(makeNimstrLit("UL"), []);
		F.line = 259;
		result_185746 = tree_64349(makeNimstrLit("DIV"), []);
		F.line = 260;
		set_class_65287(result_185746, makeNimstrLit("search_results"));
		F.line = 261;
		var matches_185813 = [];
		L4: do {
			F.line = 262;
			var i_185830 = 0;
			F.line = 3715;
			var colontmp__186019 = 0;
			F.line = 262;
			colontmp__186019 = (db_185723[0] != null ? db_185723[0].length : 0);
			F.line = 3716;
			var i_186021 = 0;
			L5: do {
				F.line = 3717;
					L6: while (true) {
					if (!(i_186021 < colontmp__186019)) break L6;
						F.line = 262;
						i_185830 = i_186021;
						L7: do {
							F.line = 263;
							var c_185831 = contents_185725[0][chckIndx(i_185830, 0, contents_185725[0].length+0-1)-0];
							if (((c_185831 == "Examples") || (c_185831 == "PEG construction"))) {
							F.line = 268;
							break L7;
							}
							
							F.line = 269;
							var colontmp__186030 = {Field0: 0, Field1: false};
							F.line = 269;
							var score_185832 = 0;
							F.line = 269;
							var matched_185833 = false;
							F.line = 269;
							nimCopy(colontmp__186030, fuzzy_match_183044(value_185745, c_185831), NTI183048);
							F.line = 269;
							score_185832 = colontmp__186030["Field0"];
							F.line = 269;
							matched_185833 = colontmp__186030["Field1"];
							if (matched_185833) {
							F.line = 271;
							if (matches_185813 != null) { matches_185813.push({Field0: db_185723[0][chckIndx(i_185830, 0, db_185723[0].length+0-1)-0], Field1: score_185832}); } else { matches_185813 = [{Field0: db_185723[0][chckIndx(i_185830, 0, db_185723[0].length+0-1)-0], Field1: score_185832}]; };
							}
							
						} while(false);
						F.line = 3719;
						i_186021 = addInt(i_186021, 1);
					}
			} while(false);
		} while(false);
		F.line = 273;
		matches_185813.sort(HEX3Aanonymous_185847);
		L8: do {
			F.line = 275;
			var i_185915 = 0;
			F.line = 3715;
			var colontmp__186025 = 0;
			F.line = 275;
			colontmp__186025 = nimMin((matches_185813 != null ? matches_185813.length : 0), 19);
			F.line = 3716;
			var i_186027 = 0;
			L9: do {
				F.line = 3717;
					L10: while (true) {
					if (!(i_186027 < colontmp__186025)) break L10;
						F.line = 275;
						i_185915 = i_186027;
						F.line = 276;
						matches_185813[chckIndx(i_185915, 0, matches_185813.length+0-1)-0]["Field0"].innerHTML = matches_185813[chckIndx(i_185915, 0, matches_185813.length+0-1)-0]["Field0"].getAttribute("data-doc-search-tag");
						F.line = 277;
						add_64500(ul_185792, tree_64349(makeNimstrLit("LI"), [matches_185813[chckIndx(i_185915, 0, matches_185813.length+0-1)-0]["Field0"]]));
						F.line = 3719;
						i_186027 = addInt(i_186027, 1);
					}
			} while(false);
		} while(false);
		if ((ul_185792.childNodes.length == 0)) {
		F.line = 279;
		add_64500(result_185746, tree_64349(makeNimstrLit("B"), [text_64466(makeNimstrLit("no search results"))]));
		}
		else {
			F.line = 281;
			add_64500(result_185746, tree_64349(makeNimstrLit("B"), [text_64466(makeNimstrLit("search results"))]));
			F.line = 282;
			add_64500(result_185746, ul_185792);
		}
		
	framePtr = F.prev;

	return result_185746;

}

function search() {

		function wrapper_185952() {
			var F={procname:"search.wrapper",prev:framePtr,filename:"dochack.nim",line:0};
			framePtr = F;
				F.line = 289;
				var elem_185954 = document.getElementById("searchInput");
				F.line = 290;
				var value_185955 = elem_185954.value;
				if (!(((value_185955 != null ? value_185955.length : 0) == 0))) {
				if ((oldtoc_185935[0] == null)) {
				F.line = 293;
				oldtoc_185935[0] = document.getElementById("tocRoot");
				}
				
				F.line = 294;
				var results_185963 = dosearch_185743(value_185955);
				F.line = 295;
				replace_by_id_64161("tocRoot", results_185963);
				}
				else {
				if (!((oldtoc_185935[0] == null))) {
				F.line = 297;
				replace_by_id_64161("tocRoot", oldtoc_185935[0]);
				}
				}
			framePtr = F.prev;

			
		}

	var F={procname:"dochack.search",prev:framePtr,filename:"dochack.nim",line:0};
	framePtr = F;
		if (!((timer_185936[0] == null))) {
		F.line = 299;
		clearTimeout(timer_185936[0]);
		}
		
		F.line = 300;
		timer_185936[0] = setTimeout(wrapper_185952, 400);
	framePtr = F.prev;

	
}
